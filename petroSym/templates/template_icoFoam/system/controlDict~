// -*- C++ -*-
// File generated by PyFoam - sorry for the ugliness

FoamFile
{
 version 2.0;
 format ascii;
 class dictionary;
 location "system";
 object controlDict;
}

application icoFoam;

startFrom startTime;

startTime 0.0;

stopAt endTime;

endTime 0.01;

deltaT 0.0001;

writeControl timeStep;

writeInterval 20;

purgeWrite 0;

writeFormat ascii;

writePrecision 6;

writeCompression no;
timeFormat general;

timePrecision 6;

runTimeModifiable yes;
functions
{
  residuals
  {
    type residuals;
    functionObjectLibs
      (
        "libutilityFunctionObjects.so"
      );
    outputControl timeStep;
    outputInterval 20;
    fields
      (
        U
        p
      );
  }
  sampleSet
  {
    type sets;
    interpolationScheme cellPoint;
    outputControl timeStep;
    outputInterval 20;
    setFormat raw;
    sets
      (
        data

        {
          type uniform;
          axis y;
          start (0.05 0 0);
          end (0.05 0.1 0);
          nPoints 50;

        }
      );
    fields
      (
        U
        p
      );
  }
  slice
  {
    type sets;
    functionObjectLibs
      (
        "libsampling.so"
      );
    outputControl timeStep;
    timeInterval 20;
    setFormat raw;
    surfaceFormat vtk;
    interpolationScheme cellPoint;
    fields
      (
        U
        p
      );
    outputInterval 20;
    surfaces
      (
        data

        {
          type uniform;
          axis y;
          start (0.05 0 0);
          end (0.05 0.1 0);
          nPoints 50;

        }
      );
  } 	/*
    sysCall
    {
        type systemCall;
        functionObjectLibs ( "libsystemCall.so" );
        executeCalls 0();
        endCalls 0();
        writeCalls 1("pwd"); //1("./generateImage.sh")
        outputControl outputTime;
    }
    */
  default2
  {
    functionObjectLibs
      (
        "libutilityFunctionObjects.so"
      );
    type coded;
    redirectType systemCall;
    outputControl outputTime;
    code
    #{
            //crear los directorios para el snapshot a medida de que pueda!
            string newDir = mesh().time().path() + "/snapshots/default2/" + mesh().time().timeName();
            Foam::system("mkdir -p " + newDir);
        #};
  }
} 	// ************************************************************************* //

